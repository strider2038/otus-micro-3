{
	"info": {
		"_postman_id": "663cfb47-4433-49bf-b654-4583902bdcd3",
		"name": "otus homework 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/version",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/version",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"version"
					]
				}
			},
			"response": []
		},
		{
			"name": "/health",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Host",
						"value": "arch.homework",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://arch.homework/health",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/v1/user (create user)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"pm.test(\"Assert name\", function () {    ",
							"    pm.expect(jsonData.firstName).to.eql(\"John\");",
							"    pm.expect(jsonData.lastName).to.eql(\"Doe\");",
							"});",
							"",
							"pm.environment.set(\"userId\", jsonData.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"johndoe_{{$randomInt}}\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"bestjohn_{{$randomInt}}@doe.com\",\n  \"phone\": \"+71002003040\"\n}"
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/v1/user (read user)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Successful GET request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(200);",
							"});",
							"pm.test(\"Assert name\", function () {    ",
							"    pm.expect(jsonData.firstName).to.eql(\"John\");",
							"    pm.expect(jsonData.lastName).to.eql(\"Doe\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://arch.homework/api/v1/user/{{userId}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/v1/user (rename user)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(200);",
							"});",
							"pm.test(\"Assert name\", function () {    ",
							"    pm.expect(jsonData.firstName).to.eql(\"Johnny\");",
							"    pm.expect(jsonData.lastName).to.eql(\"Silverhand\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"Johnny\",\n  \"lastName\": \"Silverhand\",\n  \"email\": \"bestjohn_{{$randomInt}}@doe.com\",\n  \"phone\": \"+71234567890\"\n}"
				},
				"url": {
					"raw": "http://arch.homework/api/v1/user/{{userId}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/v1/user (delete user)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.eq(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://arch.homework/api/v1/user/{{userId}}",
					"protocol": "http",
					"host": [
						"arch",
						"homework"
					],
					"path": [
						"api",
						"v1",
						"user",
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	]
}